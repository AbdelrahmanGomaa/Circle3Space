@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Models

@{
    var selection = Model.Root().Children().Where(x => x.IsVisible());
    var HomePage = Model.Root();
    var ContactsPage = Umbraco.Content(Guid.Parse("456cf9a9-1fe2-42fd-9498-c48ad2ad4215"));
    var HeaderLogo = HomePage.Value<MediaWithCrops>("headerLogo");
}


<!-- Header area start -->
<header class="header header-default header-absolute header-sticky">



    <div class="header-inner">
        <div class="site-logo">
            <a class="navbar-brand" href="index.html"><img class="img-fluid" src="@HeaderLogo?.MediaUrl()" alt="logo" /></a>
        </div>



        <div class="site-menu d-none d-xl-block">
            <ul class="main-menu">


                @if (!HomePage.Value<bool>("umbracoNaviHide"))
                {
                    <li class="nav-item"><a class="nav-link" href="@HomePage.Url()">@(!(String.IsNullOrEmpty(HomePage.Value<String>("menuDisplayName"))) ? HomePage.Value("menuDisplayName") : HomePage.Name)</a></li>
                }

                @foreach (var item in selection)
                {
                    <li class="nav-item">
                        <a class="nav-link" href="@item.Url()">@(!(String.IsNullOrEmpty(item.Value<String>("menuDisplayName"))) ? item.Value("menuDisplayName") : item.Name)</a>
                        @if (@item.Children.Where(x => x.IsVisible()).Any() && item.Name != "Blog" && item.Name != "WorkPlaces")
                        {
                            <ul class="submenu">
                                @foreach (var Child in item.Children.Where(x => x.IsVisible()))
                                {
                                    <li class="nav-item"><a class="nav-link" href="@Child.Url()">@(!(String.IsNullOrEmpty(item.Value<String>("menuDisplayName"))) ? Child.Value("menuDisplayName") : Child.Name)</a></li>
                                }
                            </ul> 
                        }
                    </li>
                } 
            </ul>
        </div>

        <div class="site-action d-none d-xl-block">
            <div class="action-hamburger">
                <a class="hamburger" href="#" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">
                    <span class="hamburger-container">
                        <span class="hamburger-inner"></span>
                        <span class="hamburger-hidden"></span>
                    </span>
                </a>
            </div>
        </div>

        <div class="mobile-action d-block d-xl-none">
            <div class="mobile-hamburger">
                <a class="hamburger" href="#" data-bs-toggle="offcanvas" data-bs-target="#menuOffcanvas" aria-controls="menuOffcanvas">
                    <span class="hamburger-container">
                        <span class="hamburger-inner"></span>
                        <span class="hamburger-hidden"></span>
                    </span>
                </a>
            </div>
        </div>

    </div>

</header>




<!--=================================
Main Menu OffCanvas -->
<div class="offcanvas main-menu-offcanvas offcanvas-end" tabindex="-1" id="menuOffcanvas" aria-labelledby="menuOffcanvasLabel">
    <div class="offcanvas-header">
        <a id="menuOffcanvasLabel" class="navbar-brand" href="index.html"><img class="img-fluid" src="@HeaderLogo?.MediaUrl()" alt="logo" /></a>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"><i class="fa-solid fa-xmark"></i></button>
    </div>
    <div class="offcanvas-body">
        <div class="body-inner">
            <nav class="navbar">


                <ul class="navbar-nav">
                    @if (!HomePage.Value<bool>("umbracoNaviHide"))
                    {
                        <li class="nav-item active"><a class="nav-link" role="button" aria-expanded="false" href="@HomePage.Url()">@(!(String.IsNullOrEmpty(HomePage.Value<String>("menuDisplayName"))) ? HomePage.Value("menuDisplayName") : HomePage.Name)</a></li>
                    }

                    @foreach (var item in selection)

                    {

                        <li class="nav-item active">
                            <a class="nav-link" role="button" aria-expanded="false" href="@item.Url()">@(!(String.IsNullOrEmpty(item.Value<String>("menuDisplayName"))) ? item.Value("menuDisplayName") : item.Name)</a>
                            @if (@item.Children.Where(x => x.IsVisible()).Any() && item.Name != "Blog" && item.Name != "WorkPlaces")

                            {

                                <ul class="navbar-nav">
                                    @foreach (var Child in item.Children.Where(x => x.IsVisible()))

                                    {

                                        <li class="nav-item active"><a class="nav-link" role="button" aria-expanded="false" href="@Child.Url()">@(!(String.IsNullOrEmpty(item.Value<String>("menuDisplayName"))) ? Child.Value("menuDisplayName") : Child.Name)</a></li>

                                    }
                                </ul>

                            }
                        </li>



                    }
                </ul>


                </nav>
                <div class="bottom-info">
                    <div class="contact-info">
                    <span class="number">@ContactsPage.Value("contactsNumber")</span>
                    <a class="mail" href="#"><i class="fa-regular fa-envelope"></i>@ContactsPage.Value("contactsEmail")</a>
                        <span class="text">@HomePage.Value("NavMenuText3")</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--=================================
    Header Side Panel -->
    <div class="offcanvas offcanvas-end sidepanel-offcanvas" tabindex="-1" id="offcanvasRight">
    <div class="offcanvas-header">
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"><i class="fa-solid fa-xmark"></i></button>
    </div>

    <div class="offcanvas-body">
        <div class="body-inner">
            <div class="about-info">
                <h4 class="title mb-3">@HomePage.Value("NavMenuText1")</h4>
                <p>@HomePage.Value("NavMenuText2")</p>
            </div>
            <div class="socail-info">
                <ul class="socail-list-item">
                    <li><a target="_blank" href="https://www.facebook.com/circle3eg/"><i class="fa-brands fa-facebook-f"></i>Facebook</a></li>
                    <li><a target="_blank" href="https://www.instagram.com/circle3coworkingspace/"><i class="fa-brands fa-instagram"></i>Instagram</a></li>
                    <li><a target="_blank" href="https://www.linkedin.com/company/circle-3-coworking-space/"><i class="fa-brands fa-linkedin"></i>Linkedin</a></li>
                    <li><a target="_blank" href="https://www.tiktok.com/@@circle3space"><i class="fa-brands fa-tiktok"></i>Tiktok</a></li>
                </ul>
            </div>
            <div class="contact-info">
                <span class="number">@ContactsPage.Value("contactsNumber")</span>
                <a class="mail" href="#"><i class="fa-regular fa-envelope"></i>@ContactsPage.Value("contactsEmail")</a>
                <span class="text">@HomePage.Value("NavMenuText3")</span>
            </div>
        </div>
    </div>
</div>

<div class="">
  @*   <form action="@Umbraco.Content("5bb2d02c-a1bf-43f3-b04b-b327b2e5248c").Url()" method="get" id="search-form" >
        <div class="control-group">
            <input id="key" name="key" type="text" class="search-field" placeholder="@Umbraco.GetDictionaryValue("Search")"
            value="@Context.Request.Query["key"]">
            
        </div>
  </form> *@
</div>
<!-- Header area end -->