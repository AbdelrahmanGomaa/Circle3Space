{"version":3,"file":"content-type-design-editor.element-gxO6mtLJ.js","sources":["../../../src/packages/core/content-type/workspace/views/design/content-type-design-editor.context.ts","../../../src/packages/core/content-type/workspace/views/design/content-type-design-editor.element.ts"],"sourcesContent":["import { UMB_CONTENT_TYPE_DESIGN_EDITOR_CONTEXT } from './content-type-design-editor.context-token.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbContextBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UmbBooleanState } from '@umbraco-cms/backoffice/observable-api';\r\n\r\nexport class UmbContentTypeDesignEditorContext extends UmbContextBase<UmbContentTypeDesignEditorContext> {\r\n\t#isSorting = new UmbBooleanState(false);\r\n\treadonly isSorting = this.#isSorting.asObservable();\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_CONTENT_TYPE_DESIGN_EDITOR_CONTEXT);\r\n\t}\r\n\r\n\tgetIsSorting() {\r\n\t\treturn this.#isSorting.getValue();\r\n\t}\r\n\r\n\tsetIsSorting(isSorting: boolean) {\r\n\t\tthis.#isSorting.setValue(isSorting);\r\n\t}\r\n\r\n\tpublic override destroy(): void {\r\n\t\tthis.#isSorting.destroy();\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n\r\nexport { UmbContentTypeDesignEditorContext as api };\r\n","import { UMB_CONTENT_TYPE_WORKSPACE_CONTEXT } from '../../content-type-workspace.context-token.js';\r\nimport type { UmbContentTypeModel, UmbPropertyTypeContainerModel } from '../../../types.js';\r\nimport {\r\n\tUmbContentTypeContainerStructureHelper,\r\n\tUmbContentTypeMoveRootGroupsIntoFirstTabHelper,\r\n} from '../../../structure/index.js';\r\nimport { UMB_COMPOSITION_PICKER_MODAL } from '../../../modals/constants.js';\r\nimport type { UmbContentTypeDesignEditorTabElement } from './content-type-design-editor-tab.element.js';\r\nimport { UmbContentTypeDesignEditorContext } from './content-type-design-editor.context.js';\r\nimport { css, html, customElement, state, repeat, ifDefined, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UUIInputElement, UUIInputEvent, UUITabElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport { encodeFolderName } from '@umbraco-cms/backoffice/router';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { CompositionTypeModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type {\r\n\tIComponentRoute,\r\n\tUmbRoute,\r\n\tUmbRouterSlotChangeEvent,\r\n\tUmbRouterSlotInitEvent,\r\n} from '@umbraco-cms/backoffice/router';\r\nimport type {\r\n\tManifestWorkspaceViewContentTypeDesignEditorKind,\r\n\tUmbWorkspaceViewElement,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport type { UmbConfirmModalData } from '@umbraco-cms/backoffice/modal';\r\nimport { UMB_MODAL_MANAGER_CONTEXT, umbConfirmModal } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbSorterController } from '@umbraco-cms/backoffice/sorter';\r\n\r\n@customElement('umb-content-type-design-editor')\r\nexport class UmbContentTypeDesignEditorElement extends UmbLitElement implements UmbWorkspaceViewElement {\r\n\t#sorter = new UmbSorterController<UmbPropertyTypeContainerModel, UUITabElement>(this, {\r\n\t\tgetUniqueOfElement: (element) => element.getAttribute('data-umb-tab-id'),\r\n\t\tgetUniqueOfModel: (tab) => tab.id,\r\n\t\tidentifier: 'content-type-tabs-sorter',\r\n\t\titemSelector: 'uui-tab',\r\n\t\tcontainerSelector: 'uui-tab-group',\r\n\t\tdisabledItemSelector: ':not([sortable])',\r\n\t\tresolvePlacement: (args) => args.relatedRect.left + args.relatedRect.width * 0.5 > args.pointerX,\r\n\t\tonChange: ({ model }) => {\r\n\t\t\tthis._tabs = model;\r\n\t\t},\r\n\t\tonEnd: ({ item }) => {\r\n\t\t\t/**\r\n\t\t\t * Explanation: If the item is the first in list, we compare it to the item behind it to set a sortOrder.\r\n\t\t\t * If it's not the first in list, we will compare to the item in before it, and check the following item to see if it caused overlapping sortOrder, then update\r\n\t\t\t * the overlap if true, which may cause another overlap, so we loop through them till no more overlaps...\r\n\t\t\t */\r\n\t\t\tconst model = this._tabs ?? [];\r\n\t\t\tconst newIndex = model.findIndex((entry) => entry.id === item.id);\r\n\r\n\t\t\t// Doesn't exist in model\r\n\t\t\tif (newIndex === -1) return;\r\n\r\n\t\t\t// As origin we set prev sort order to -1, so if no other then our item will become 0\r\n\t\t\tlet prevSortOrder = -1;\r\n\r\n\t\t\t// If not first in list, then get the sortOrder of the item before.  [NL]\r\n\t\t\tif (newIndex > 0 && model.length > 0) {\r\n\t\t\t\tprevSortOrder = model[newIndex - 1].sortOrder;\r\n\t\t\t}\r\n\r\n\t\t\t// increase the prevSortOrder and use it for the moved item,\r\n\t\t\tthis.#tabsStructureHelper.partialUpdateContainer(item.id, {\r\n\t\t\t\tsortOrder: ++prevSortOrder,\r\n\t\t\t});\r\n\r\n\t\t\t// Adjust everyone right after, until there is a gap between the sortOrders: [NL]\r\n\t\t\tlet i = newIndex + 1;\r\n\t\t\tlet entry: UmbPropertyTypeContainerModel | undefined;\r\n\t\t\t// As long as there is an item with the index & the sortOrder is less or equal to the prevSortOrder, we will update the sortOrder:\r\n\t\t\twhile ((entry = model[i]) !== undefined && entry.sortOrder <= prevSortOrder) {\r\n\t\t\t\t// Increase the prevSortOrder and use it for the item:\r\n\t\t\t\tthis.#tabsStructureHelper.partialUpdateContainer(entry.id, {\r\n\t\t\t\t\tsortOrder: ++prevSortOrder,\r\n\t\t\t\t});\r\n\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\t#workspaceContext?: (typeof UMB_CONTENT_TYPE_WORKSPACE_CONTEXT)['TYPE'];\r\n\t#designContext = new UmbContentTypeDesignEditorContext(this);\r\n\t#tabsStructureHelper = new UmbContentTypeContainerStructureHelper<UmbContentTypeModel>(this);\r\n\t#currentTabComponent?: UmbContentTypeDesignEditorTabElement;\r\n\t#processingTabId?: string;\r\n\r\n\tset manifest(value: ManifestWorkspaceViewContentTypeDesignEditorKind) {\r\n\t\tthis._compositionRepositoryAlias = value.meta.compositionRepositoryAlias;\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _compositionRepositoryAlias?: string;\r\n\t//private _hasRootProperties = false;\r\n\r\n\t@state()\r\n\tprivate _hasRootGroups = false;\r\n\r\n\t@state()\r\n\tprivate _routes: UmbRoute[] = [];\r\n\r\n\t@state()\r\n\tprivate _tabs?: Array<UmbPropertyTypeContainerModel>;\r\n\r\n\t@state()\r\n\tprivate _routerPath?: string;\r\n\r\n\t@state()\r\n\tprivate _activePath = '';\r\n\r\n\t@state()\r\n\tprivate _sortModeActive?: boolean;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.#sorter.disable();\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#designContext.isSorting,\r\n\t\t\t(isSorting) => {\r\n\t\t\t\tthis._sortModeActive = isSorting;\r\n\t\t\t\tif (isSorting) {\r\n\t\t\t\t\tthis.#sorter.enable();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.#sorter.disable();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'_observeIsSorting',\r\n\t\t);\r\n\r\n\t\t//TODO: We need to differentiate between local and composition tabs (and hybrids)\r\n\r\n\t\tthis.#tabsStructureHelper.setContainerChildType('Tab');\r\n\t\tthis.#tabsStructureHelper.setIsRoot(true);\r\n\t\tthis.observe(this.#tabsStructureHelper.mergedContainers, (tabs) => {\r\n\t\t\tthis._tabs = tabs;\r\n\t\t\tthis.#sorter.setModel(tabs);\r\n\t\t\tthis.#createRoutes();\r\n\t\t});\r\n\r\n\t\t// _hasRootProperties can be gotten via _tabsStructureHelper.hasProperties. But we do not support root properties currently.\r\n\r\n\t\tthis.consumeContext(UMB_CONTENT_TYPE_WORKSPACE_CONTEXT, (workspaceContext) => {\r\n\t\t\tthis.#workspaceContext = workspaceContext;\r\n\t\t\tthis.#tabsStructureHelper.setStructureManager(workspaceContext.structure);\r\n\r\n\t\t\tthis.#observeRootGroups();\r\n\t\t});\r\n\t}\r\n\r\n\t#toggleSortMode() {\r\n\t\tthis.#designContext?.setIsSorting(!this._sortModeActive);\r\n\t}\r\n\r\n\tasync #observeRootGroups() {\r\n\t\tif (!this.#workspaceContext) return;\r\n\r\n\t\tthis.observe(\r\n\t\t\tawait this.#workspaceContext.structure.hasRootContainers('Group'),\r\n\t\t\t(hasRootGroups) => {\r\n\t\t\t\tthis._hasRootGroups = hasRootGroups;\r\n\t\t\t\tthis.#createRoutes();\r\n\t\t\t},\r\n\t\t\t'_observeGroups',\r\n\t\t);\r\n\t}\r\n\r\n\t#createRoutes() {\r\n\t\t// TODO: How about storing a set of elements based on tab ids? to prevent re-initializing the element when renaming..[NL]\r\n\t\tif (!this.#workspaceContext || !this._tabs || this._hasRootGroups === undefined) return;\r\n\t\tconst routes: UmbRoute[] = [];\r\n\r\n\t\t// We gather the activeTab name to check for rename, this is a bit hacky way to redirect the user without noticing the url changes to the new name [NL]\r\n\t\tlet activeTabName: string | undefined = undefined;\r\n\r\n\t\tif (this._tabs.length > 0) {\r\n\t\t\tthis._tabs?.forEach((tab) => {\r\n\t\t\t\tconst tabName = tab.name && tab.name !== '' ? tab.name : '-';\r\n\t\t\t\tif (tab.id === this.#processingTabId) {\r\n\t\t\t\t\tactiveTabName = tabName;\r\n\t\t\t\t}\r\n\t\t\t\troutes.push({\r\n\t\t\t\t\tpath: `tab/${encodeFolderName(tabName)}`,\r\n\t\t\t\t\tcomponent: () => import('./content-type-design-editor-tab.element.js'),\r\n\t\t\t\t\tsetup: (component) => {\r\n\t\t\t\t\t\tthis.#currentTabComponent = component as UmbContentTypeDesignEditorTabElement;\r\n\t\t\t\t\t\tthis.#currentTabComponent.containerId = tab.id;\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this._hasRootGroups || this._tabs.length === 0) {\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: 'root',\r\n\t\t\t\tcomponent: () => import('./content-type-design-editor-tab.element.js'),\r\n\t\t\t\tsetup: (component) => {\r\n\t\t\t\t\tthis.#currentTabComponent = component as UmbContentTypeDesignEditorTabElement;\r\n\t\t\t\t\tthis.#currentTabComponent.containerId = null;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: '',\r\n\t\t\t\tredirectTo: 'root',\r\n\t\t\t\tguards: [() => this.#processingTabId === undefined],\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: '',\r\n\t\t\t\tredirectTo: routes[0]?.path,\r\n\t\t\t\tguards: [() => this.#processingTabId === undefined],\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (routes.length !== 0) {\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: `**`,\r\n\t\t\t\tcomponent: async () => (await import('@umbraco-cms/backoffice/router')).UmbRouteNotFoundElement,\r\n\t\t\t\tguards: [() => this.#processingTabId === undefined],\r\n\t\t\t\tsetup: () => {\r\n\t\t\t\t\tthis.#currentTabComponent = undefined;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\troutes.push({\r\n\t\t\tpath: `**`,\r\n\t\t\tcomponent: async () => (await import('@umbraco-cms/backoffice/router')).UmbRouteNotFoundElement,\r\n\t\t\tsetup: () => {\r\n\t\t\t\tthis.#currentTabComponent = undefined;\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tthis._routes = routes;\r\n\r\n\t\t// If we have a active tab, then we want to make sure its up to date with latest tab id, as an already active route is not getting its setup method triggered again [NL]\r\n\t\tif (this._activePath && this.#currentTabComponent) {\r\n\t\t\tconst route = routes.find((x) => this._routerPath + '/' + x.path === this._activePath) as\r\n\t\t\t\t| IComponentRoute\r\n\t\t\t\t| undefined;\r\n\t\t\troute?.setup?.(this.#currentTabComponent, undefined as any);\r\n\t\t}\r\n\r\n\t\t// If we have an active tab name, then we might have a active tab name re-name, then we will redirect to the new name if it has been changed: [NL]\r\n\t\tif (activeTabName !== undefined) {\r\n\t\t\tif (this._activePath && this._routerPath) {\r\n\t\t\t\tconst oldPath = this._activePath.split(this._routerPath)[1];\r\n\t\t\t\tconst newPath = '/tab/' + encodeFolderName(activeTabName);\r\n\t\t\t\tif (oldPath !== newPath) {\r\n\t\t\t\t\t// Lets cheat a bit and update the activePath already, in this way our input does not loose focus [NL]\r\n\t\t\t\t\tthis._activePath = this._routerPath + newPath;\r\n\t\t\t\t\t// Update the current URL, so we are still on this specific tab: [NL]\r\n\t\t\t\t\twindow.history.replaceState(null, '', this._activePath);\r\n\r\n\t\t\t\t\t// TODO: We have some flickering when renaming, this could potentially be fixed if we cache the view and re-use it if the same is requested [NL]\r\n\t\t\t\t\t// Or maybe its just about we just send the updated tabName to the view, and let it handle the update itself [NL]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync #requestDeleteTab(tab: UmbPropertyTypeContainerModel | undefined) {\r\n\t\tif (!tab) return;\r\n\t\t// TODO: Localize this:\r\n\t\tconst tabName = tab.name === '' ? 'Unnamed' : tab.name;\r\n\t\t// TODO: Localize this:\r\n\t\tconst modalData: UmbConfirmModalData = {\r\n\t\t\theadline: 'Delete tab',\r\n\t\t\tcontent: html`<umb-localize key=\"contentTypeEditor_confirmDeleteTabMessage\" .args=${[tabName]}>\r\n\t\t\t\t\tAre you sure you want to delete the tab <strong>${tabName}</strong>\r\n\t\t\t\t</umb-localize>\r\n\t\t\t\t<div style=\"color:var(--uui-color-danger-emphasis)\">\r\n\t\t\t\t\t<umb-localize key=\"contentTypeEditor_confirmDeleteTabNotice\">\r\n\t\t\t\t\t\tThis will delete all items that doesn't belong to a composition.\r\n\t\t\t\t\t</umb-localize>\r\n\t\t\t\t</div>`,\r\n\t\t\tconfirmLabel: this.localize.term('actions_delete'),\r\n\t\t\tcolor: 'danger',\r\n\t\t};\r\n\r\n\t\t// TODO: If this tab is composed of other tabs, then notify that it will only delete the local tab. [NL]\r\n\r\n\t\tawait umbConfirmModal(this, modalData);\r\n\r\n\t\tthis.#deleteTab(tab?.id);\r\n\t}\r\n\t#deleteTab(tabId?: string) {\r\n\t\tif (!tabId) return;\r\n\t\tthis.#workspaceContext?.structure.removeContainer(null, tabId);\r\n\t\tif (this.#processingTabId === tabId) {\r\n\t\t\tthis.#processingTabId = undefined;\r\n\t\t}\r\n\t}\r\n\tasync #addTab() {\r\n\t\t// If there is already a Tab with no name, then focus it instead of adding a new one: [NL]\r\n\t\t// TODO: Optimize this so it looks at the data instead of the DOM [NL]\r\n\t\tconst inputEl = this.shadowRoot?.querySelector('uui-tab[active] uui-input') as UUIInputElement;\r\n\t\tif (inputEl?.value === '') {\r\n\t\t\tthis.#focusInput();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.#workspaceContext) {\r\n\t\t\tthrow new Error('Workspace context has not been found');\r\n\t\t}\r\n\r\n\t\tif (!this._tabs) return;\r\n\r\n\t\tconst len = this._tabs.length;\r\n\t\tconst sortOrder = len === 0 ? 0 : this._tabs[len - 1].sortOrder + 1;\r\n\t\tconst tab = await this.#workspaceContext.structure.createContainer(null, null, 'Tab', sortOrder);\r\n\t\t// If length was 0 before, then we need to move the root groups into the first tab: [NL]\r\n\t\tif (len === 0) {\r\n\t\t\tnew UmbContentTypeMoveRootGroupsIntoFirstTabHelper(this, this.#workspaceContext.structure);\r\n\t\t}\r\n\t\tif (tab) {\r\n\t\t\tconst path = this._routerPath + '/tab/' + encodeFolderName(tab.name && tab.name !== '' ? tab.name : '-');\r\n\t\t\twindow.history.replaceState(null, '', path);\r\n\t\t\tthis.#focusInput();\r\n\t\t}\r\n\t}\r\n\r\n\tasync #focusInput() {\r\n\t\tsetTimeout(() => {\r\n\t\t\t(this.shadowRoot?.querySelector('uui-tab[active] uui-input') as UUIInputElement | undefined)?.focus();\r\n\t\t}, 100);\r\n\t}\r\n\r\n\tasync #tabNameChanged(event: InputEvent, tab: UmbPropertyTypeContainerModel) {\r\n\t\tthis.#processingTabId = tab.id;\r\n\t\tlet newName = (event.target as HTMLInputElement).value;\r\n\r\n\t\tconst changedName = this.#workspaceContext?.structure.makeContainerNameUniqueForOwnerContentType(\r\n\t\t\ttab.id,\r\n\t\t\tnewName,\r\n\t\t\t'Tab',\r\n\t\t);\r\n\r\n\t\t// Check if it collides with another tab name of this same content-type, if so adjust name:\r\n\t\t// Notice changed name might be an empty string... [NL]\r\n\t\tif (changedName !== null && changedName !== undefined) {\r\n\t\t\tnewName = changedName;\r\n\t\t\t(event.target as HTMLInputElement).value = newName;\r\n\t\t}\r\n\r\n\t\tthis.#tabsStructureHelper.partialUpdateContainer(tab.id!, {\r\n\t\t\tname: newName,\r\n\t\t});\r\n\t}\r\n\r\n\tasync #tabNameBlur(event: FocusEvent, tab: UmbPropertyTypeContainerModel) {\r\n\t\tif (!this.#processingTabId) return;\r\n\t\tconst newName = (event.target as HTMLInputElement | undefined)?.value;\r\n\t\tif (newName === '') {\r\n\t\t\tconst changedName = this.#workspaceContext!.structure.makeEmptyContainerName(this.#processingTabId, 'Tab');\r\n\r\n\t\t\t(event.target as HTMLInputElement).value = changedName;\r\n\r\n\t\t\tthis.#tabsStructureHelper.partialUpdateContainer(tab.id!, {\r\n\t\t\t\tname: changedName,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.#processingTabId = undefined;\r\n\t}\r\n\r\n\tasync #openCompositionModal() {\r\n\t\tif (!this.#workspaceContext || !this._compositionRepositoryAlias) return;\r\n\r\n\t\tconst unique = this.#workspaceContext.getUnique();\r\n\t\tif (!unique) {\r\n\t\t\tthrow new Error('Content Type unique is undefined');\r\n\t\t}\r\n\t\tconst contentTypes = this.#workspaceContext.structure.getContentTypes();\r\n\t\tconst ownerContentType = this.#workspaceContext.structure.getOwnerContentType();\r\n\t\tif (!ownerContentType) {\r\n\t\t\tthrow new Error('Owner Content Type not found');\r\n\t\t}\r\n\r\n\t\tconst compositionConfiguration = {\r\n\t\t\tcompositionRepositoryAlias: this._compositionRepositoryAlias,\r\n\t\t\tunique: unique,\r\n\t\t\t// Here we use the loaded content types to declare what we already inherit. That puts a pressure on cleaning up, but thats a good thing. [NL]\r\n\t\t\tselection: contentTypes.map((contentType) => contentType.unique).filter((id) => id !== unique),\r\n\t\t\tisElement: ownerContentType.isElement,\r\n\t\t\tcurrentPropertyAliases: [],\r\n\t\t\tisNew: this.#workspaceContext.getIsNew()!,\r\n\t\t};\r\n\r\n\t\tconst modalManagerContext = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n\t\tconst modalContext = modalManagerContext.open(this, UMB_COMPOSITION_PICKER_MODAL, {\r\n\t\t\tdata: compositionConfiguration,\r\n\t\t});\r\n\t\tawait modalContext?.onSubmit();\r\n\r\n\t\tif (!modalContext?.value) return;\r\n\r\n\t\tconst compositionIds = modalContext.getValue().selection;\r\n\r\n\t\tthis.#workspaceContext?.setCompositions(\r\n\t\t\tcompositionIds.map((unique) => ({ contentType: { unique }, compositionType: CompositionTypeModel.COMPOSITION })),\r\n\t\t);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout header-fit-height>\r\n\t\t\t\t<div id=\"header\" slot=\"header\">\r\n\t\t\t\t\t<div id=\"container-list\">${this.renderTabsNavigation()} ${this.#renderAddButton()}</div>\r\n\t\t\t\t\t${this.#renderActions()}\r\n\t\t\t\t</div>\r\n\t\t\t\t<umb-router-slot\r\n\t\t\t\t\t.routes=${this._routes}\r\n\t\t\t\t\t@init=${(event: UmbRouterSlotInitEvent) => {\r\n\t\t\t\t\t\tthis._routerPath = event.target.absoluteRouterPath;\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t@change=${(event: UmbRouterSlotChangeEvent) => {\r\n\t\t\t\t\t\tthis._activePath = event.target.absoluteActiveViewPath ?? '';\r\n\t\t\t\t\t}}>\r\n\t\t\t\t</umb-router-slot>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderAddButton() {\r\n\t\t// TODO: Localize this:\r\n\t\tif (this._sortModeActive) return;\r\n\t\treturn html`\r\n\t\t\t<uui-button id=\"add-tab\" @click=\"${this.#addTab}\" label=\"Add tab\">\r\n\t\t\t\t<uui-icon name=\"icon-add\"></uui-icon>\r\n\t\t\t\tAdd tab\r\n\t\t\t</uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderActions() {\r\n\t\tconst sortButtonText = this._sortModeActive\r\n\t\t\t? this.localize.term('general_reorderDone')\r\n\t\t\t: this.localize.term('general_reorder');\r\n\r\n\t\treturn html`\r\n\t\t\t<div id=\"actions\">\r\n\t\t\t\t${this._compositionRepositoryAlias\r\n\t\t\t\t\t? html`\r\n\t\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\t\tlook=\"outline\"\r\n\t\t\t\t\t\t\t\tlabel=${this.localize.term('contentTypeEditor_compositions')}\r\n\t\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\t\t@click=${this.#openCompositionModal}>\r\n\t\t\t\t\t\t\t\t<uui-icon name=\"icon-merge\"></uui-icon>\r\n\t\t\t\t\t\t\t\t${this.localize.term('contentTypeEditor_compositions')}\r\n\t\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t`\r\n\t\t\t\t\t: ''}\r\n\t\t\t\t<uui-button look=\"outline\" label=${sortButtonText} compact @click=${this.#toggleSortMode}>\r\n\t\t\t\t\t<uui-icon name=\"icon-height\"></uui-icon>\r\n\t\t\t\t\t${sortButtonText}\r\n\t\t\t\t</uui-button>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderTabsNavigation() {\r\n\t\tif (!this._tabs || this._tabs.length === 0) return;\r\n\r\n\t\treturn html`\r\n\t\t\t<div id=\"tabs-group\">\r\n\t\t\t\t<uui-tab-group>\r\n\t\t\t\t\t${this.renderRootTab()}\r\n\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\tthis._tabs,\r\n\t\t\t\t\t\t(tab) => tab.id,\r\n\t\t\t\t\t\t(tab) => this.renderTab(tab),\r\n\t\t\t\t\t)}\r\n\t\t\t\t</uui-tab-group>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderRootTab() {\r\n\t\tconst rootTabPath = this._routerPath + '/root';\r\n\t\tconst rootTabActive = rootTabPath === this._activePath;\r\n\t\tif (!this._hasRootGroups && !this._sortModeActive) {\r\n\t\t\t// If we don't have any root groups and we are not in sort mode, then we don't want to render the root tab.\r\n\t\t\treturn nothing;\r\n\t\t}\r\n\t\treturn html`\r\n\t\t\t<uui-tab\r\n\t\t\t\tid=\"root-tab\"\r\n\t\t\t\tdata-mark=\"root-tab\"\r\n\t\t\t\tclass=${this._hasRootGroups || rootTabActive ? '' : 'content-tab-is-empty'}\r\n\t\t\t\tlabel=${this.localize.term('general_generic')}\r\n\t\t\t\t.active=${rootTabActive}\r\n\t\t\t\thref=${rootTabPath}>\r\n\t\t\t\t${this.localize.term('general_generic')}\r\n\t\t\t</uui-tab>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderTab(tab: UmbPropertyTypeContainerModel) {\r\n\t\tconst path = this._routerPath + '/tab/' + encodeFolderName(tab.name && tab.name !== '' ? tab.name : '-');\r\n\t\tconst tabActive = path === this._activePath;\r\n\t\tconst ownedTab = this.#tabsStructureHelper.isOwnerChildContainer(tab.id!) ?? false;\r\n\r\n\t\treturn html`<uui-tab\r\n\t\t\tlabel=${tab.name && tab.name !== '' ? tab.name : 'Unnamed'}\r\n\t\t\t.active=${tabActive}\r\n\t\t\thref=${path}\r\n\t\t\tdata-umb-tab-id=${ifDefined(tab.id)}\r\n\t\t\tdata-mark=\"tab:${tab.name}\"\r\n\t\t\t?sortable=${ownedTab}>\r\n\t\t\t${this.renderTabInner(tab, tabActive, ownedTab)}\r\n\t\t</uui-tab>`;\r\n\t}\r\n\r\n\trenderTabInner(tab: UmbPropertyTypeContainerModel, tabActive: boolean, ownedTab: boolean) {\r\n\t\t// TODO: Localize this:\r\n\t\tconst hasTabName = tab.name && tab.name !== '';\r\n\t\tconst tabName = hasTabName ? tab.name : 'Unnamed';\r\n\t\tif (this._sortModeActive) {\r\n\t\t\treturn html`<div class=\"tab\">\r\n\t\t\t\t${ownedTab\r\n\t\t\t\t\t? html`<uui-icon name=\"icon-grip\" class=\"drag-${tab.id}\"> </uui-icon>${tabName}\r\n\t\t\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\t\t\tlabel=\"sort order\"\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tvalue=${ifDefined(tab.sortOrder)}\r\n\t\t\t\t\t\t\t\tstyle=\"width:50px\"\r\n\t\t\t\t\t\t\t\t@change=${(e: UUIInputEvent) => this.#changeOrderNumber(tab, e)}></uui-input>`\r\n\t\t\t\t\t: html`<uui-icon name=\"icon-merge\"></uui-icon>${tab.name!}`}\r\n\t\t\t</div>`;\r\n\t\t}\r\n\r\n\t\tif (tabActive && ownedTab) {\r\n\t\t\treturn html`<div class=\"tab\">\r\n\t\t\t\t<uui-input\r\n\t\t\t\t\tid=\"input\"\r\n\t\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\t\tplaceholder=\"Unnamed\"\r\n\t\t\t\t\tlabel=${tab.name!}\r\n\t\t\t\t\tvalue=\"${tab.name!}\"\r\n\t\t\t\t\tauto-width\r\n\t\t\t\t\tminlength=\"1\"\r\n\t\t\t\t\t@change=${(e: InputEvent) => this.#tabNameChanged(e, tab)}\r\n\t\t\t\t\t@input=${(e: InputEvent) => this.#tabNameChanged(e, tab)}\r\n\t\t\t\t\t@blur=${(e: FocusEvent) => this.#tabNameBlur(e, tab)}>\r\n\t\t\t\t\t${this.renderDeleteFor(tab)}\r\n\t\t\t\t</uui-input>\r\n\t\t\t</div>`;\r\n\t\t}\r\n\r\n\t\tif (ownedTab) {\r\n\t\t\treturn html`<div class=\"not-active\">\r\n\t\t\t\t<span class=${hasTabName ? '' : 'invaild'}>${hasTabName ? tab.name : 'Unnamed'}</span> ${this.renderDeleteFor(\r\n\t\t\t\t\ttab,\r\n\t\t\t\t)}\r\n\t\t\t</div>`;\r\n\t\t} else {\r\n\t\t\treturn html`<div class=\"not-active\"><uui-icon name=\"icon-merge\"></uui-icon>${tab.name!}</div>`;\r\n\t\t}\r\n\t}\r\n\r\n\t#changeOrderNumber(tab: UmbPropertyTypeContainerModel, e: UUIInputEvent) {\r\n\t\tif (!e.target.value || !tab.id) return;\r\n\t\tconst sortOrder = Number(e.target.value);\r\n\t\tthis.#tabsStructureHelper.partialUpdateContainer(tab.id, { sortOrder });\r\n\t}\r\n\r\n\trenderDeleteFor(tab: UmbPropertyTypeContainerModel) {\r\n\t\treturn html`<uui-button\r\n\t\t\tlabel=${this.localize.term('actions_remove')}\r\n\t\t\tclass=\"trash\"\r\n\t\t\tslot=\"append\"\r\n\t\t\t@click=${(e: MouseEvent) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.#requestDeleteTab(tab);\r\n\t\t\t}}\r\n\t\t\tcompact>\r\n\t\t\t<uui-icon name=\"icon-trash\"></uui-icon>\r\n\t\t</uui-button>`;\r\n\t}\r\n\r\n\toverride destroy(): void {\r\n\t\tthis.#currentTabComponent = undefined;\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\t--uui-tab-background: var(--uui-color-surface);\r\n\t\t\t}\r\n\r\n\t\t\t#buttons-wrapper {\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\talign-items: stretch;\r\n\t\t\t}\r\n\r\n\t\t\t[drag-placeholder] {\r\n\t\t\t\topacity: 0.5;\r\n\t\t\t}\r\n\r\n\t\t\t[drag-placeholder] uui-input {\r\n\t\t\t\tvisibility: hidden;\r\n\t\t\t}\r\n\r\n\t\t\t/* TODO: This should be replaced with a general workspace bar — naming is hard */\r\n\r\n\t\t\t#header {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmin-height: var(--uui-size-16);\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\tflex-wrap: nowrap;\r\n\t\t\t}\r\n\r\n\t\t\t#container-list {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t}\r\n\r\n\t\t\t#tabs-group {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t}\r\n\r\n\t\t\t#actions {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-space-2);\r\n\t\t\t}\r\n\r\n\t\t\tuui-tab-group {\r\n\t\t\t\tflex-wrap: nowrap;\r\n\t\t\t}\r\n\r\n\t\t\tuui-tab.content-tab-is-empty {\r\n\t\t\t\talign-self: center;\r\n\t\t\t\tborder-radius: 3px;\r\n\t\t\t\t--uui-tab-text: var(--uui-color-text-alt);\r\n\t\t\t\tborder: dashed 1px var(--uui-color-border-emphasis);\r\n\t\t\t}\r\n\r\n\t\t\tuui-tab {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tborder-left: 1px hidden transparent;\r\n\t\t\t\tborder-right: 1px solid var(--uui-color-border);\r\n\t\t\t\tbackground-color: var(--uui-color-surface);\r\n\t\t\t}\r\n\r\n\t\t\t.not-active uui-button {\r\n\t\t\t\tpointer-events: auto;\r\n\t\t\t}\r\n\r\n\t\t\t.not-active {\r\n\t\t\t\tpointer-events: none;\r\n\t\t\t\tdisplay: inline-flex;\r\n\t\t\t\tpadding-left: var(--uui-size-space-3);\r\n\t\t\t\tborder: 1px solid transparent;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tgap: var(--uui-size-space-3);\r\n\t\t\t}\r\n\r\n\t\t\t.invaild {\r\n\t\t\t\tcolor: var(--uui-color-danger, var(--uui-color-invalid));\r\n\t\t\t}\r\n\r\n\t\t\t.trash {\r\n\t\t\t\topacity: 1;\r\n\t\t\t\ttransition: opacity 100ms;\r\n\t\t\t}\r\n\r\n\t\t\tuui-tab:not(:hover, :focus) .trash {\r\n\t\t\t\topacity: 0;\r\n\t\t\t\ttransition: opacity 100ms;\r\n\t\t\t}\r\n\r\n\t\t\tuui-input:not(:focus, :hover, :invalid) {\r\n\t\t\t\tborder: 1px solid transparent;\r\n\t\t\t}\r\n\r\n\t\t\t.inherited {\r\n\t\t\t\tvertical-align: sub;\r\n\t\t\t}\r\n\r\n\t\t\t[drag-placeholder] {\r\n\t\t\t\topacity: 0.2;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbContentTypeDesignEditorElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-content-type-design-editor': UmbContentTypeDesignEditorElement;\r\n\t}\r\n}\r\n"],"names":["UmbContentTypeDesignEditorContext","UmbContextBase","host","UMB_CONTENT_TYPE_DESIGN_EDITOR_CONTEXT","#isSorting","UmbBooleanState","isSorting","_sorter","_workspaceContext","_designContext","_tabsStructureHelper","_currentTabComponent","_processingTabId","_UmbContentTypeDesignEditorElement_instances","toggleSortMode_fn","observeRootGroups_fn","createRoutes_fn","requestDeleteTab_fn","deleteTab_fn","addTab_fn","focusInput_fn","tabNameChanged_fn","tabNameBlur_fn","openCompositionModal_fn","renderAddButton_fn","renderActions_fn","changeOrderNumber_fn","UmbContentTypeDesignEditorElement","UmbLitElement","__privateAdd","UmbSorterController","element","tab","args","model","item","newIndex","entry","prevSortOrder","__privateGet","i","UmbContentTypeContainerStructureHelper","tabs","__privateMethod","UMB_CONTENT_TYPE_WORKSPACE_CONTEXT","workspaceContext","__privateSet","value","html","event","repeat","rootTabPath","rootTabActive","nothing","path","encodeFolderName","tabActive","ownedTab","ifDefined","hasTabName","tabName","e","hasRootGroups","routes","activeTabName","component","x","oldPath","newPath","modalData","umbConfirmModal","tabId","len","sortOrder","UmbContentTypeMoveRootGroupsIntoFirstTabHelper","newName","changedName","unique","contentTypes","ownerContentType","compositionConfiguration","contentType","id","modalContext","UMB_MODAL_MANAGER_CONTEXT","UMB_COMPOSITION_PICKER_MODAL","compositionIds","CompositionTypeModel","sortButtonText","UmbTextStyles","css","__decorateClass","state","customElement","UmbContentTypeDesignEditorElement$1"],"mappings":"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"}