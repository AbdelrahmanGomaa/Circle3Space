{"version":3,"file":"workspace-action-default-kind.element-C9tIRWqV.js","sources":["../../../src/packages/core/workspace/components/workspace-action/default/workspace-action-default-kind.element.ts"],"sourcesContent":["import type {\r\n\tManifestWorkspaceAction,\r\n\tManifestWorkspaceActionMenuItem,\r\n\tMetaWorkspaceActionDefaultKind,\r\n\tUmbWorkspaceActionDefaultKind,\r\n} from '../../../types.js';\r\nimport { UmbActionExecutedEvent } from '@umbraco-cms/backoffice/event';\r\nimport { html, customElement, property, state, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport {\r\n\ttype UmbExtensionElementAndApiInitializer,\r\n\tUmbExtensionsElementAndApiInitializer,\r\n} from '@umbraco-cms/backoffice/extension-api';\r\nimport { stringOrStringArrayIntersects } from '@umbraco-cms/backoffice/utils';\r\n\r\nimport '../../workspace-action-menu/index.js';\r\n\r\n@customElement('umb-workspace-action')\r\nexport class UmbWorkspaceActionElement<\r\n\tMetaType extends MetaWorkspaceActionDefaultKind = MetaWorkspaceActionDefaultKind,\r\n\tApiType extends UmbWorkspaceActionDefaultKind<MetaType> = UmbWorkspaceActionDefaultKind<MetaType>,\r\n> extends UmbLitElement {\r\n\t#manifest?: ManifestWorkspaceAction<MetaType>;\r\n\t#api?: ApiType;\r\n\t#extensionsController?: UmbExtensionsElementAndApiInitializer<\r\n\t\tManifestWorkspaceActionMenuItem,\r\n\t\t'workspaceActionMenuItem',\r\n\t\tManifestWorkspaceActionMenuItem\r\n\t>;\r\n\r\n\t@property({ type: Object, attribute: false })\r\n\tpublic set manifest(value: ManifestWorkspaceAction<MetaType> | undefined) {\r\n\t\tif (!value) return;\r\n\t\tconst oldValue = this.#manifest;\r\n\t\tif (oldValue !== value) {\r\n\t\t\tthis.#manifest = value;\r\n\t\t\tthis._href = value?.meta.href;\r\n\t\t\tthis._additionalOptions = value?.meta.additionalOptions;\r\n\t\t\tthis.#createAliases();\r\n\t\t}\r\n\t}\r\n\tpublic get manifest() {\r\n\t\treturn this.#manifest;\r\n\t}\r\n\r\n\t@property({ attribute: false })\r\n\tpublic set api(api: ApiType | undefined) {\r\n\t\tthis.#api = api;\r\n\r\n\t\tthis.#api?.getHref?.().then((href) => {\r\n\t\t\tthis._href = href ?? this.manifest?.meta.href;\r\n\t\t});\r\n\r\n\t\tthis.#api?.hasAdditionalOptions?.().then((additionalOptions) => {\r\n\t\t\tthis._additionalOptions = additionalOptions ?? this.manifest?.meta.additionalOptions;\r\n\t\t});\r\n\r\n\t\tthis.#observeIsDisabled();\r\n\t}\r\n\tpublic get api(): ApiType | undefined {\r\n\t\treturn this.#api;\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _buttonState?: UUIButtonState;\r\n\r\n\t@state()\r\n\tprivate _additionalOptions?: boolean;\r\n\r\n\t@state()\r\n\tprivate _href?: string;\r\n\r\n\t@state()\r\n\t_isDisabled = false;\r\n\r\n\t@state()\r\n\tprivate _items: Array<UmbExtensionElementAndApiInitializer<ManifestWorkspaceActionMenuItem>> = [];\r\n\r\n\t/**\r\n\t * Create a list of original and overwritten aliases of workspace actions for the action.\r\n\t */\r\n\tasync #createAliases() {\r\n\t\tif (!this.#manifest) return;\r\n\t\tconst aliases = new Set<string>();\r\n\t\tif (this.#manifest) {\r\n\t\t\taliases.add(this.#manifest.alias);\r\n\r\n\t\t\t// TODO: This works on one level for now, which will be enough for the current use case. However, you can overwrite the overwrites, so we need to make this recursive. Perhaps we could move this to the extensions initializer.\r\n\t\t\t// Add overwrites so that we can show any previously registered actions on the original workspace action\r\n\t\t\tif (this.#manifest.overwrites) {\r\n\t\t\t\tconst overwrites = Array.isArray(this.#manifest.overwrites)\r\n\t\t\t\t\t? this.#manifest.overwrites\r\n\t\t\t\t\t: [this.#manifest.overwrites];\r\n\t\t\t\tfor (const alias of overwrites) {\r\n\t\t\t\t\taliases.add(alias);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.#observeExtensions(Array.from(aliases));\r\n\t}\r\n\r\n\tasync #onClick(event: MouseEvent) {\r\n\t\tif (this._href) {\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\t// If its a link or has additional options, then we do not want to display state on the button. [NL]\r\n\t\tif (!this._href) {\r\n\t\t\tif (!this._additionalOptions) {\r\n\t\t\t\tthis._buttonState = 'waiting';\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (!this.#api) throw new Error('No api defined');\r\n\t\t\t\tawait this.#api.execute();\r\n\t\t\t\tif (!this._additionalOptions) {\r\n\t\t\t\t\tthis._buttonState = 'success';\r\n\t\t\t\t}\r\n\t\t\t} catch (reason) {\r\n\t\t\t\tif (reason) {\r\n\t\t\t\t\tconsole.warn(reason);\r\n\t\t\t\t}\r\n\t\t\t\tif (!this._additionalOptions) {\r\n\t\t\t\t\tthis._buttonState = 'failed';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.dispatchEvent(new UmbActionExecutedEvent());\r\n\t}\r\n\r\n\t#observeIsDisabled() {\r\n\t\tthis.observe(\r\n\t\t\tthis.#api?.isDisabled,\r\n\t\t\t(isDisabled) => {\r\n\t\t\t\tthis._isDisabled = isDisabled || false;\r\n\t\t\t},\r\n\t\t\t'isDisabledObserver',\r\n\t\t);\r\n\t}\r\n\r\n\t#observeExtensions(aliases: string[]): void {\r\n\t\tthis.#extensionsController?.destroy();\r\n\t\tthis.#extensionsController = new UmbExtensionsElementAndApiInitializer<\r\n\t\t\tManifestWorkspaceActionMenuItem,\r\n\t\t\t'workspaceActionMenuItem',\r\n\t\t\tManifestWorkspaceActionMenuItem\r\n\t\t>(\r\n\t\t\tthis,\r\n\t\t\tumbExtensionsRegistry,\r\n\t\t\t'workspaceActionMenuItem',\r\n\t\t\tExtensionApiArgsMethod,\r\n\t\t\t(action) => stringOrStringArrayIntersects(action.forWorkspaceActions, aliases),\r\n\t\t\t(extensionControllers) => {\r\n\t\t\t\tthis._items = extensionControllers;\r\n\t\t\t},\r\n\t\t\tundefined, // We can leave the alias to undefined, as we destroy this our selfs.\r\n\t\t);\r\n\t}\r\n\r\n\t#renderButton() {\r\n\t\tconst label = this.#manifest?.meta.label\r\n\t\t\t? this.localize.string(this.#manifest.meta.label)\r\n\t\t\t: (this.#manifest?.name ?? '');\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tdata-mark=\"workspace-action:${this.#manifest?.alias}\"\r\n\t\t\t\t.href=${this._href}\r\n\t\t\t\tlook=${this.#manifest?.meta.look ?? 'default'}\r\n\t\t\t\tcolor=${this.#manifest?.meta.color ?? 'default'}\r\n\t\t\t\tlabel=${this._additionalOptions ? label + 'â€¦' : label}\r\n\t\t\t\t.disabled=${this._isDisabled}\r\n\t\t\t\t.state=${this._buttonState}\r\n\t\t\t\t@click=${this.#onClick}></uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderActionMenu() {\r\n\t\treturn html`\r\n\t\t\t<umb-workspace-action-menu\r\n\t\t\t\t.items=${this._items}\r\n\t\t\t\tcolor=\"${this.#manifest?.meta.color ?? 'default'}\"\r\n\t\t\t\tlook=\"${this.#manifest?.meta.look ?? 'default'}\"></umb-workspace-action-menu>\r\n\t\t`;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn when(\r\n\t\t\tthis._items.length,\r\n\t\t\t() => html` <uui-button-group> ${this.#renderButton()} ${this.#renderActionMenu()} </uui-button-group> `,\r\n\t\t\t() => this.#renderButton(),\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UmbWorkspaceActionElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-workspace-action': UmbWorkspaceActionElement;\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n * @param manifest\r\n * @returns An array of arguments to pass to the extension API initializer.\r\n */\r\nfunction ExtensionApiArgsMethod(manifest: ManifestWorkspaceActionMenuItem) {\r\n\treturn [{ meta: manifest.meta }];\r\n}\r\n"],"names":["_manifest","_api","_extensionsController","_UmbWorkspaceActionElement_instances","createAliases_fn","onClick_fn","observeIsDisabled_fn","observeExtensions_fn","renderButton_fn","renderActionMenu_fn","UmbWorkspaceActionElement","UmbLitElement","__privateAdd","value","__privateGet","__privateSet","__privateMethod","api","href","additionalOptions","when","html","aliases","overwrites","alias","event","reason","UmbActionExecutedEvent","isDisabled","UmbExtensionsElementAndApiInitializer","umbExtensionsRegistry","ExtensionApiArgsMethod","action","stringOrStringArrayIntersects","extensionControllers","label","__decorateClass","property","state","customElement","UmbWorkspaceActionElement$1","manifest"],"mappings":"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"}