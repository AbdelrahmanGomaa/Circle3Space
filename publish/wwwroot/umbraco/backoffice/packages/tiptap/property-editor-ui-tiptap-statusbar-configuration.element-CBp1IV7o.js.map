{"version":3,"file":"property-editor-ui-tiptap-statusbar-configuration.element-CBp1IV7o.js","sources":["../../../src/packages/tiptap/property-editors/tiptap/contexts/tiptap-statusbar-configuration.context.ts","../../../src/packages/tiptap/property-editors/tiptap/components/property-editor-ui-tiptap-statusbar-configuration.element.ts"],"sourcesContent":["import type { UmbTiptapStatusbarExtension, UmbTiptapStatusbarViewModel } from '../types.js';\r\nimport type { UmbTiptapStatusbarValue } from '../../../components/types.js';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbArrayState, UmbBooleanState } from '@umbraco-cms/backoffice/observable-api';\r\nimport { UmbContextBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UmbId } from '@umbraco-cms/backoffice/id';\r\nimport { UMB_PROPERTY_DATASET_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbTiptapStatusbarConfigurationContext extends UmbContextBase<UmbTiptapStatusbarConfigurationContext> {\r\n\t#extensions = new UmbArrayState<UmbTiptapStatusbarExtension>([], (x) => x.alias);\r\n\tpublic readonly extensions = this.#extensions.asObservable();\r\n\r\n\t#reload = new UmbBooleanState(false);\r\n\tpublic readonly reload = this.#reload.asObservable();\r\n\r\n\t#extensionsEnabled = new Set<string>();\r\n\r\n\t#extensionsInUse = new Set<string>();\r\n\r\n\t#lookup?: Map<string, UmbTiptapStatusbarExtension>;\r\n\r\n\t#statusbar = new UmbArrayState<UmbTiptapStatusbarViewModel>([], (x) => x.unique);\r\n\tpublic readonly statusbar = this.#statusbar.asObservable();\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, 'UmbTiptapStatusbarConfigurationContext');\r\n\r\n\t\tthis.observe(umbExtensionsRegistry.byType('tiptapStatusbarExtension'), (extensions) => {\r\n\t\t\tconst _extensions = extensions\r\n\t\t\t\t.sort((a, b) => a.alias.localeCompare(b.alias))\r\n\t\t\t\t.map((ext) => ({\r\n\t\t\t\t\talias: ext.alias,\r\n\t\t\t\t\tlabel: ext.meta.label,\r\n\t\t\t\t\ticon: ext.meta.icon,\r\n\t\t\t\t\tdependencies: ext.forExtensions,\r\n\t\t\t\t}));\r\n\r\n\t\t\tthis.#extensions.setValue(_extensions);\r\n\r\n\t\t\tthis.#lookup = new Map(_extensions.map((ext) => [ext.alias, ext]));\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, async (dataset) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tawait dataset.propertyValueByAlias<Array<string>>('extensions'),\r\n\t\t\t\t(extensions) => {\r\n\t\t\t\t\tif (extensions) {\r\n\t\t\t\t\t\tthis.#extensionsEnabled.clear();\r\n\t\t\t\t\t\tthis.#reload.setValue(false);\r\n\r\n\t\t\t\t\t\tthis.#extensions\r\n\t\t\t\t\t\t\t.getValue()\r\n\t\t\t\t\t\t\t.filter((x) => !x.dependencies || x.dependencies.every((z) => extensions.includes(z)))\r\n\t\t\t\t\t\t\t.map((x) => x.alias)\r\n\t\t\t\t\t\t\t.forEach((alias) => this.#extensionsEnabled.add(alias));\r\n\r\n\t\t\t\t\t\tthis.#reload.setValue(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'_observeExtensions',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic cloneStatusbarValue(value?: UmbTiptapStatusbarValue | null): UmbTiptapStatusbarValue {\r\n\t\tif (!this.isValidStatusbarValue(value)) return [[], []];\r\n\t\treturn value.map((area) => [...area]);\r\n\t}\r\n\r\n\tpublic filterExtensions(query: string): Array<UmbTiptapStatusbarExtension> {\r\n\t\treturn this.#extensions\r\n\t\t\t.getValue()\r\n\t\t\t.filter((ext) => ext.alias?.toLowerCase().includes(query) || ext.label?.toLowerCase().includes(query));\r\n\t}\r\n\r\n\tpublic getExtensionByAlias(alias: string): UmbTiptapStatusbarExtension | undefined {\r\n\t\treturn this.#lookup?.get(alias);\r\n\t}\r\n\r\n\tpublic isExtensionEnabled(alias: string): boolean {\r\n\t\treturn this.#extensionsEnabled.has(alias);\r\n\t}\r\n\r\n\tpublic isExtensionInUse(alias: string): boolean {\r\n\t\treturn this.#extensionsInUse.has(alias);\r\n\t}\r\n\r\n\tpublic isValidStatusbarValue(value: unknown): value is UmbTiptapStatusbarValue {\r\n\t\tif (!Array.isArray(value)) return false;\r\n\t\tfor (const area of value) {\r\n\t\t\tif (!Array.isArray(area)) return false;\r\n\t\t\tfor (const alias of area) {\r\n\t\t\t\tif (typeof alias !== 'string') return false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic insertStatusbarItem(alias: string, to: [number, number]) {\r\n\t\tconst statusbar = [...this.#statusbar.getValue()];\r\n\r\n\t\tconst [areaIndex, itemIndex] = to;\r\n\r\n\t\tconst area = statusbar[areaIndex];\r\n\t\tconst items = [...area.data];\r\n\r\n\t\titems.splice(itemIndex, 0, alias);\r\n\t\tthis.#extensionsInUse.add(alias);\r\n\r\n\t\tstatusbar[areaIndex] = { unique: area.unique, data: items };\r\n\r\n\t\tthis.#statusbar.setValue(statusbar);\r\n\t}\r\n\r\n\tpublic moveStatusbarItem(from: [number, number], to: [number, number]) {\r\n\t\tconst [fromAreaIndex, fromItemIndex] = from;\r\n\t\tconst [toAreaIndex, toItemIndex] = to;\r\n\r\n\t\tconst statusbar = [...this.#statusbar.getValue()];\r\n\r\n\t\tconst fromArea = statusbar[fromAreaIndex];\r\n\t\tconst fromItems = [...fromArea.data];\r\n\r\n\t\tconst toBeMoved = fromItems.splice(fromItemIndex, 1);\r\n\r\n\t\tstatusbar[fromAreaIndex] = { unique: fromArea.unique, data: fromItems };\r\n\r\n\t\tconst toArea = statusbar[toAreaIndex];\r\n\t\tconst toItems = [...toArea.data];\r\n\r\n\t\ttoItems.splice(toItemIndex, 0, toBeMoved[0]);\r\n\r\n\t\tstatusbar[toAreaIndex] = { unique: toArea.unique, data: toItems };\r\n\r\n\t\tthis.#statusbar.setValue(statusbar);\r\n\t}\r\n\r\n\tpublic removeStatusbarItem(from: [number, number]) {\r\n\t\tconst [areaIndex, itemIndex] = from;\r\n\r\n\t\tconst statusbar = [...this.#statusbar.getValue()];\r\n\r\n\t\tconst area = statusbar[areaIndex];\r\n\t\tconst items = [...area.data];\r\n\r\n\t\tconst removed = items.splice(itemIndex, 1);\r\n\t\tremoved.forEach((alias) => this.#extensionsInUse.delete(alias));\r\n\r\n\t\tstatusbar[areaIndex] = { unique: area.unique, data: items };\r\n\r\n\t\tthis.#statusbar.setValue(statusbar);\r\n\t}\r\n\r\n\tpublic setStatusbar(value?: UmbTiptapStatusbarValue | null) {\r\n\t\tif (!this.isValidStatusbarValue(value)) {\r\n\t\t\tvalue = [[], []];\r\n\t\t}\r\n\r\n\t\tif (value.length === 1) {\r\n\t\t\tvalue = [[], value[0]];\r\n\t\t}\r\n\r\n\t\tthis.#extensionsInUse.clear();\r\n\t\tvalue.forEach((area) => area.forEach((alias) => this.#extensionsInUse.add(alias)));\r\n\r\n\t\tconst statusbar = value.map((area) => ({ unique: UmbId.new(), data: area }));\r\n\r\n\t\tthis.#statusbar.setValue(statusbar);\r\n\t}\r\n}\r\n","import { UmbTiptapStatusbarConfigurationContext } from '../contexts/tiptap-statusbar-configuration.context.js';\r\nimport type { UmbTiptapStatusbarValue } from '../../../components/types.js';\r\nimport type { UmbTiptapStatusbarViewModel, UmbTiptapStatusbarExtension } from '../types.js';\r\nimport { customElement, css, html, property, when, repeat, nothing, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { debounce } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UMB_PROPERTY_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport type { UmbPropertyEditorUiElement } from '@umbraco-cms/backoffice/property-editor';\r\n\r\n@customElement('umb-property-editor-ui-tiptap-statusbar-configuration')\r\nexport class UmbPropertyEditorUiTiptapStatusbarConfigurationElement\r\n\textends UmbLitElement\r\n\timplements UmbPropertyEditorUiElement\r\n{\r\n\t#context = new UmbTiptapStatusbarConfigurationContext(this);\r\n\r\n\t#currentDragItem?: { alias: string; fromPos?: [number, number] };\r\n\r\n\t#debouncedFilter = debounce((query: string) => {\r\n\t\tthis._availableExtensions = this.#context.filterExtensions(query);\r\n\t}, 250);\r\n\r\n\t@state()\r\n\tprivate _availableExtensions: Array<UmbTiptapStatusbarExtension> = [];\r\n\r\n\t@state()\r\n\tprivate _statusbar: Array<UmbTiptapStatusbarViewModel> = [];\r\n\r\n\t@property({ attribute: false })\r\n\tset value(value: UmbTiptapStatusbarValue | undefined) {\r\n\t\tif (!value) value = [[], []];\r\n\t\tif (value === this.#value) return;\r\n\t\tthis.#value = value;\r\n\t}\r\n\tget value(): UmbTiptapStatusbarValue | undefined {\r\n\t\treturn this.#context.cloneStatusbarValue(this.#value);\r\n\t}\r\n\t#value?: UmbTiptapStatusbarValue;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_CONTEXT, (propertyContext) => {\r\n\t\t\tthis.observe(this.#context.extensions, (extensions) => {\r\n\t\t\t\tthis._availableExtensions = extensions;\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(this.#context.reload, (reload) => {\r\n\t\t\t\tif (reload) {\r\n\t\t\t\t\tthis.requestUpdate();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(this.#context.statusbar, (statusbar) => {\r\n\t\t\t\tif (!statusbar.length) return;\r\n\t\t\t\tthis._statusbar = statusbar;\r\n\t\t\t\tthis.#value = statusbar.map((area) => [...area.data]);\r\n\t\t\t\tpropertyContext.setValue(this.#value);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprotected override firstUpdated() {\r\n\t\tthis.#context.setStatusbar(this.#value);\r\n\t}\r\n\r\n\t#onClick(item: UmbTiptapStatusbarExtension) {\r\n\t\tconst lastArea = (this.#value?.length ?? 1) - 1;\r\n\t\tconst lastItem = this.#value?.[lastArea].length ?? 0;\r\n\t\tthis.#context.insertStatusbarItem(item.alias, [lastArea, lastItem]);\r\n\t}\r\n\r\n\t#onDragStart(event: DragEvent, alias: string, fromPos?: [number, number]) {\r\n\t\tevent.dataTransfer!.effectAllowed = 'move';\r\n\t\tthis.#currentDragItem = { alias, fromPos };\r\n\t}\r\n\r\n\t#onDragOver(event: DragEvent) {\r\n\t\tevent.preventDefault();\r\n\t\tevent.dataTransfer!.dropEffect = 'move';\r\n\t}\r\n\r\n\t#onDragEnd(event: DragEvent) {\r\n\t\tevent.preventDefault();\r\n\t\tif (event.dataTransfer?.dropEffect === 'none') {\r\n\t\t\tconst { fromPos } = this.#currentDragItem ?? {};\r\n\t\t\tif (!fromPos) return;\r\n\r\n\t\t\tthis.#context.removeStatusbarItem(fromPos);\r\n\t\t}\r\n\t}\r\n\r\n\t#onDrop(event: DragEvent, toPos?: [number, number]) {\r\n\t\tevent.preventDefault();\r\n\t\tconst { alias, fromPos } = this.#currentDragItem ?? {};\r\n\r\n\t\t// Remove item if no destination position is provided\r\n\t\tif (fromPos && !toPos) {\r\n\t\t\tthis.#context.removeStatusbarItem(fromPos);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Move item if both source and destination positions are available\r\n\t\tif (fromPos && toPos) {\r\n\t\t\tthis.#context.moveStatusbarItem(fromPos, toPos);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Insert item if an alias and a destination position are provided\r\n\t\tif (alias && toPos) {\r\n\t\t\tthis.#context.insertStatusbarItem(alias, toPos);\r\n\t\t}\r\n\t}\r\n\r\n\t#onFilterInput(event: InputEvent & { target: HTMLInputElement }) {\r\n\t\tconst query = (event.target.value ?? '').toLocaleLowerCase();\r\n\t\tthis.#debouncedFilter(query);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`${this.#renderDesigner()} ${this.#renderAvailableItems()}`;\r\n\t}\r\n\r\n\t#renderAvailableItems() {\r\n\t\treturn html`\r\n\t\t\t<uui-box id=\"toolbox\" headline=${this.localize.term('tiptap_statusbar_availableItems')}>\r\n\t\t\t\t<div slot=\"header-actions\">\r\n\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\ttype=\"search\"\r\n\t\t\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t\t\tplaceholder=${this.localize.term('placeholders_filter')}\r\n\t\t\t\t\t\t@input=${this.#onFilterInput}>\r\n\t\t\t\t\t\t<div slot=\"prepend\">\r\n\t\t\t\t\t\t\t<uui-icon name=\"search\"></uui-icon>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</uui-input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<uui-scroll-container>\r\n\t\t\t\t\t<div class=\"available-items\" dropzone=\"move\" @drop=${this.#onDrop} @dragover=${this.#onDragOver}>\r\n\t\t\t\t\t\t${when(\r\n\t\t\t\t\t\t\tthis._availableExtensions.length === 0,\r\n\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t\thtml`<umb-localize key=\"tiptap_statusbar_availableItemsEmpty\"\r\n\t\t\t\t\t\t\t\t\t>There are no statusbar extensions to show</umb-localize\r\n\t\t\t\t\t\t\t\t>`,\r\n\t\t\t\t\t\t\t() => repeat(this._availableExtensions, (item) => this.#renderAvailableItem(item)),\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</uui-scroll-container>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderAvailableItem(item: UmbTiptapStatusbarExtension) {\r\n\t\tconst forbidden = !this.#context.isExtensionEnabled(item.alias);\r\n\t\tconst inUse = this.#context.isExtensionInUse(item.alias);\r\n\t\tif (inUse || forbidden) return nothing;\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tcompact\r\n\t\t\t\tclass=${forbidden ? 'forbidden' : ''}\r\n\t\t\t\tdata-mark=\"tiptap-toolbar-item:${item.alias}\"\r\n\t\t\t\tdraggable=\"true\"\r\n\t\t\t\tlook=${forbidden ? 'placeholder' : 'outline'}\r\n\t\t\t\t?disabled=${forbidden || inUse}\r\n\t\t\t\t@click=${() => this.#onClick(item)}\r\n\t\t\t\t@dragstart=${(e: DragEvent) => this.#onDragStart(e, item.alias)}\r\n\t\t\t\t@dragend=${this.#onDragEnd}>\r\n\t\t\t\t<div class=\"inner\">\r\n\t\t\t\t\t${when(item.icon, () => html`<umb-icon .name=${item.icon}></umb-icon>`)}\r\n\t\t\t\t\t<span>${this.localize.string(item.label)}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderDesigner() {\r\n\t\treturn html`\r\n\t\t\t<div id=\"statusbar\">\r\n\t\t\t\t<div id=\"areas\">\r\n\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\tthis._statusbar,\r\n\t\t\t\t\t\t(area) => area.unique,\r\n\t\t\t\t\t\t(area, idx) => this.#renderArea(area, idx),\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderArea(area?: UmbTiptapStatusbarViewModel, areaIndex = 0) {\r\n\t\tif (!area) return nothing;\r\n\t\treturn html`\r\n\t\t\t<div\r\n\t\t\t\tclass=\"area\"\r\n\t\t\t\tdropzone=\"move\"\r\n\t\t\t\t@dragover=${this.#onDragOver}\r\n\t\t\t\t@drop=${(e: DragEvent) => this.#onDrop(e, [areaIndex, area.data.length - 1])}>\r\n\t\t\t\t<div class=\"items\">\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\tarea?.data.length === 0,\r\n\t\t\t\t\t\t() => html`<em><umb-localize key=\"toolbar_emptyGroup\">Empty</umb-localize></em>`,\r\n\t\t\t\t\t\t() => html`${area!.data.map((alias, idx) => this.#renderItem(alias, areaIndex, idx))}`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderItem(alias: string, areaIndex = 0, itemIndex = 0) {\r\n\t\tconst item = this.#context?.getExtensionByAlias(alias);\r\n\t\tif (!item) return nothing;\r\n\r\n\t\tconst forbidden = !this.#context?.isExtensionEnabled(item.alias);\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tcompact\r\n\t\t\t\tclass=${forbidden ? 'forbidden' : ''}\r\n\t\t\t\tdata-mark=\"tiptap-toolbar-item:${item.alias}\"\r\n\t\t\t\tdraggable=\"true\"\r\n\t\t\t\tlook=${forbidden ? 'placeholder' : 'outline'}\r\n\t\t\t\ttitle=${this.localize.string(item.label)}\r\n\t\t\t\t?disabled=${forbidden}\r\n\t\t\t\t@click=${() => this.#context.removeStatusbarItem([areaIndex, itemIndex])}\r\n\t\t\t\t@dragend=${this.#onDragEnd}\r\n\t\t\t\t@dragstart=${(e: DragEvent) => this.#onDragStart(e, alias, [areaIndex, itemIndex])}>\r\n\t\t\t\t<div class=\"inner\">\r\n\t\t\t\t\t${when(item.icon, (icon) => html`<umb-icon .name=${icon}></umb-icon>`)}\r\n\t\t\t\t\t<span>${this.localize.string(item.label)}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tgap: var(--uui-size-space-4);\r\n\t\t\t\tflex-grow: 1;\r\n\t\t\t}\r\n\r\n\t\t\t@media (min-width: 1400px) {\r\n\t\t\t\t:host {\r\n\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t}\r\n\t\t\t\t#toolbox {\r\n\t\t\t\t\twidth: 500px;\r\n\t\t\t\t\tmax-width: 33%;\r\n\t\t\t\t\tflex-grow: 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#statusbar {\r\n\t\t\t\t\tflex-grow: 100;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t#toolbox {\r\n\t\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\t}\r\n\r\n\t\t\tuui-box {\r\n\t\t\t\t[slot='header-actions'] {\r\n\t\t\t\t\tmargin-bottom: var(--uui-size-2);\r\n\r\n\t\t\t\t\tuui-input {\r\n\t\t\t\t\t\talign-items: baseline;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tuui-icon {\r\n\t\t\t\t\t\tcolor: var(--uui-color-border);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tuui-scroll-container {\r\n\t\t\t\tmax-height: 350px;\r\n\t\t\t}\r\n\r\n\t\t\t.available-items {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-wrap: wrap;\r\n\t\t\t\tgap: var(--uui-size-3);\r\n\r\n\t\t\t\tuui-button {\r\n\t\t\t\t\t--uui-button-font-weight: normal;\r\n\r\n\t\t\t\t\t&[draggable='true'],\r\n\t\t\t\t\t&[draggable='true'] > .inner {\r\n\t\t\t\t\t\tcursor: move;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t&[disabled],\r\n\t\t\t\t\t&[disabled] > .inner {\r\n\t\t\t\t\t\tcursor: not-allowed;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t&.forbidden {\r\n\t\t\t\t\t\t--color: var(--uui-color-danger);\r\n\t\t\t\t\t\t--color-standalone: var(--uui-color-danger-standalone);\r\n\t\t\t\t\t\t--color-emphasis: var(--uui-color-danger-emphasis);\r\n\t\t\t\t\t\t--color-contrast: var(--uui-color-danger);\r\n\t\t\t\t\t\t--uui-button-contrast-disabled: var(--uui-color-danger);\r\n\t\t\t\t\t\t--uui-button-border-color-disabled: var(--uui-color-danger);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdiv {\r\n\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\tgap: var(--uui-size-1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t#areas {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-1);\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\talign-items: center;\r\n\r\n\t\t\t\t.area {\r\n\t\t\t\t\tflex: 1;\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\talign-items: flex-start;\r\n\t\t\t\t\tjustify-content: space-between;\r\n\r\n\t\t\t\t\tborder: 1px dashed transparent;\r\n\t\t\t\t\tpadding: var(--uui-size-3);\r\n\r\n\t\t\t\t\t&:last-child {\r\n\t\t\t\t\t\tjustify-content: flex-end;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t&:focus-within,\r\n\t\t\t\t\t&:hover {\r\n\t\t\t\t\t\tborder-color: var(--uui-color-border-standalone);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.items {\r\n\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\t\tflex-wrap: wrap;\r\n\t\t\t\t\t\tgap: var(--uui-size-1);\r\n\r\n\t\t\t\t\t\tuui-button {\r\n\t\t\t\t\t\t\t--uui-button-font-weight: normal;\r\n\r\n\t\t\t\t\t\t\t&[draggable='true'],\r\n\t\t\t\t\t\t\t&[draggable='true'] > .inner {\r\n\t\t\t\t\t\t\t\tcursor: move;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t&[disabled],\r\n\t\t\t\t\t\t\t&[disabled] > .inner {\r\n\t\t\t\t\t\t\t\tcursor: not-allowed;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t&.forbidden {\r\n\t\t\t\t\t\t\t\t--color: var(--uui-color-danger);\r\n\t\t\t\t\t\t\t\t--color-standalone: var(--uui-color-danger-standalone);\r\n\t\t\t\t\t\t\t\t--color-emphasis: var(--uui-color-danger-emphasis);\r\n\t\t\t\t\t\t\t\t--color-contrast: var(--uui-color-danger);\r\n\t\t\t\t\t\t\t\t--uui-button-contrast-disabled: var(--uui-color-danger);\r\n\t\t\t\t\t\t\t\t--uui-button-border-color-disabled: var(--uui-color-danger);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdiv {\r\n\t\t\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\t\t\tgap: var(--uui-size-1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t#btnAddRow {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmargin-top: var(--uui-size-1);\r\n\t\t\t}\r\n\r\n\t\t\t.handle {\r\n\t\t\t\tcursor: move;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport { UmbPropertyEditorUiTiptapStatusbarConfigurationElement as element };\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-editor-ui-tiptap-statusbar-configuration': UmbPropertyEditorUiTiptapStatusbarConfigurationElement;\r\n\t}\r\n}\r\n"],"names":["UmbTiptapStatusbarConfigurationContext","UmbContextBase","host","#extensions","UmbArrayState","x","#reload","UmbBooleanState","#extensionsEnabled","#extensionsInUse","#statusbar","umbExtensionsRegistry","extensions","_extensions","a","b","ext","#lookup","UMB_PROPERTY_DATASET_CONTEXT","dataset","z","alias","value","area","query","to","statusbar","areaIndex","itemIndex","items","from","fromAreaIndex","fromItemIndex","toAreaIndex","toItemIndex","fromArea","fromItems","toBeMoved","toArea","toItems","UmbId","_context","_currentDragItem","_debouncedFilter","_value","_UmbPropertyEditorUiTiptapStatusbarConfigurationElement_instances","onClick_fn","onDragStart_fn","onDragOver_fn","onDragEnd_fn","onDrop_fn","onFilterInput_fn","renderAvailableItems_fn","renderAvailableItem_fn","renderDesigner_fn","renderArea_fn","renderItem_fn","UmbPropertyEditorUiTiptapStatusbarConfigurationElement","UmbLitElement","__privateAdd","debounce","__privateGet","UMB_PROPERTY_CONTEXT","propertyContext","reload","__privateSet","html","__privateMethod","item","lastArea","lastItem","event","fromPos","toPos","when","repeat","forbidden","inUse","nothing","e","idx","icon","css","__decorateClass","state","property","customElement"],"mappings":"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"}